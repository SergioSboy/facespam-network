{"version":3,"file":"static/js/304.ac8fcbf8.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"photo\":\"ProfileInfo_photo__8xnE2\",\"content__img\":\"ProfileInfo_content__img__-jOSP\"};","import React, {useEffect, useState} from 'react';\r\nimport MyInput from \"../../MyInput/MyInput\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    };\r\n    return (\r\n        <div>\r\n\r\n\r\n            {props.isOwner ? !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode}>  {status || \"-----\"}</span>\r\n                </div>\r\n                : <span> {status || \"-----\"}</span>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <MyInput autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length){\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img alt=\"description of image\" className={classes.content__img} src='https://i.stack.imgur.com/SvWWN.png'/>\r\n            </div>\r\n            <div>\r\n                <img alt={'avatar'} src={props.profile.photos.large || userPhoto} className={classes.photo}/>\r\n                {props.profile.fullName}\r\n            </div>\r\n            <div>\r\n                {props.isOwner && <input type={'file'} onChange={mainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks isOwner={props.isOwner} status={props.status} updateStatus={props.updateStatus}/>\r\n                CONTACT:\r\n            </div>\r\n            <div>\r\n                facebook: {props.profile.contacts.facebook}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"play\":\"MyPosts_play__tLmDT\",\"my_btn\":\"MyPosts_my_btn__ABIfQ\",\"my_inp\":\"MyPosts_my_inp__ql82R\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+C9iv\"};","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.item}>\r\n                <img src={props.img} alt=\"user photo\"/>\r\n                <b>\r\n                    {props.message}\r\n                </b>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport MyButton from \"../../MyButton/MyButton\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form className={classes.play} onSubmit={props.handleSubmit}>\r\n            <div className={classes.my_inp}>\r\n                <Field component={Textarea} placeholder='Create...' name='newPostText'\r\n                       validate={[required, maxLengthCreator(10)]}/>\r\n            </div>\r\n\r\n            <div className={classes.my_btn}>\r\n                <MyButton name={'Send'}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'newPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.profilePage.postsData.map(el => <Post message={el.message} key={el.id} id={el.id}\r\n                                                                    img={el.img}/>)\r\n    let onAddPost = (value) => {\r\n        props.addNewPost(value.newPostText)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='item'>\r\n            <div>\r\n                My posts\r\n                <div>\r\n                    New post\r\n                </div>\r\n                <div>\r\n                    <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                </div>\r\n                {postsElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React, {useEffect} from 'react'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    let navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (props.isAuth === false) {\r\n            return navigate(\"../login\")\r\n        }\r\n    }, [props.isAuth])\r\n    return (\r\n\r\n        <div>\r\n\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} savePhoto={props.savePhoto}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport withRouter from \"./WithRouter\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     isOwner={!this.props.router.params.userId}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto})(withRouter(ProfileContainer));"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","isOwner","_jsx","onDoubleClick","activateMode","MyInput","autoFocus","onBlur","deactivateEditMode","updateStatus","onChange","e","target","value","profile","Preloader","alt","className","classes","src","photos","large","userPhoto","fullName","type","files","length","savePhoto","ProfileStatusWithHooks","contacts","facebook","img","message","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","maxLengthCreator","MyButton","React","postsElements","profilePage","postsData","map","el","Post","id","addNewPost","newPostText","connect","state","dispatch","addPostActionCreator","MyPosts","navigate","useNavigate","isAuth","ProfileInfo","MyPostsContainer","ProfileContainer","refreshProfile","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","Profile","auth","withRouter"],"sourceRoot":""}