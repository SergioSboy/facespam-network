{"version":3,"file":"static/js/569.1d9b2a9a.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"photo\":\"ProfileInfo_photo__8xnE2\",\"content__img\":\"ProfileInfo_content__img__-jOSP\"};","import React from 'react';\r\nimport MyInput from \"../../MyInput/MyInput\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: !this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false})\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n\r\n        this.setState({\r\n            status: e.target.value\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status)\r\n            this.setState({status:this.props.status})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <MyInput onChange={this.onStatusChange} onBlur={this.deactivateEditMode}\r\n                                 value={this.props.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ProfileStatus;","import React from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img alt=\"description of image\" className={classes.content__img} src='https://i.stack.imgur.com/SvWWN.png'/>\r\n            </div>\r\n            <div>\r\n                <img alt={'avatar'} src={props.profile.photos.small} className={classes.photo}/>\r\n                {props.profile.fullName}\r\n            </div>\r\n            <div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                CONTACT:\r\n            </div>\r\n            <div>\r\n                facebook: {props.profile.contacts.facebook}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"play\":\"MyPosts_play__tLmDT\",\"my_btn\":\"MyPosts_my_btn__ABIfQ\",\"my_inp\":\"MyPosts_my_inp__ql82R\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+C9iv\"};","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.item}>\r\n                <img src={props.img} alt=\"user photo\"/>\r\n                <b>\r\n                    {props.message}\r\n                </b>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport MyButton from \"../../MyButton/MyButton\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form className={classes.play} onSubmit={props.handleSubmit}>\r\n            <div className={classes.my_inp}>\r\n                <Field component={Textarea} placeholder='Create...' name='newPostText'\r\n                       validate={[required, maxLengthCreator(10)]}/>\r\n            </div>\r\n\r\n            <div className={classes.my_btn}>\r\n                <MyButton name={'Send'}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'newPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.profilePage.postsData.map(el => <Post message={el.message} key={el.id} id={el.id}\r\n                                                                    img={el.img}/>)\r\n    let onAddPost = (value) => {\r\n        props.addNewPost(value.newPostText)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='item'>\r\n            <div>\r\n                My posts\r\n                <div>\r\n                    New post\r\n                </div>\r\n                <div>\r\n                    <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                </div>\r\n                {postsElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React, {useEffect} from 'react'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    let navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (props.isAuth === false) {\r\n            return navigate(\"../login\")\r\n        }\r\n    }, [props.isAuth])\r\n    return (\r\n\r\n        <div>\r\n\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport withRouter from \"./WithRouter\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.profilePage.status,\r\n    authorizedUserId:state.auth.userId,\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getUserProfile, getStatus, updateStatus})(withRouter(ProfileContainer));"],"names":["ProfileStatus","React","constructor","arguments","state","editMode","status","this","props","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","target","value","componentDidUpdate","prevProps","prevState","render","_jsxs","children","_jsx","onDoubleClick","MyInput","onChange","onBlur","profile","alt","className","classes","src","photos","small","fullName","contacts","facebook","Preloader","img","message","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","maxLengthCreator","MyButton","postsElements","profilePage","postsData","map","el","Post","id","addNewPost","newPostText","connect","dispatch","addPostActionCreator","MyPosts","navigate","useNavigate","useEffect","isAuth","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","userId","router","params","authorizedUserId","history","push","getUserProfile","getStatus","Profile","auth","withRouter"],"sourceRoot":""}