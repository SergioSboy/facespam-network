{"version":3,"file":"static/js/447.4ad8c517.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Users/Users.module.css?b9d0","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"big\":\"Users_big__ozkNB\",\"userPhoto\":\"Users_userPhoto__rUzSe\",\"selectPage\":\"Users_selectPage__qoPUf\",\"page\":\"Users_page__xLZ9Y\",\"grid\":\"Users_grid__yw0pn\",\"profile\":\"Users_profile__q4w+g\",\"carousel\":\"Users_carousel__3AoHY\",\"btn\":\"Users_btn__2tKNe\"};","import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport MyButton from \"../MyButton/MyButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let slicedPages;\r\n    let curPage = props.currentPage;\r\n    if (curPage - 3 < 0) {\r\n        slicedPages = pages.slice(0, 5);\r\n    } else {\r\n        slicedPages = pages.slice(curPage - 3, curPage + 2);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.big}>\r\n\r\n            <div className={classes.carousel}>\r\n                {slicedPages.map(p => {\r\n                    return <div className={props.currentPage === p ? classes.selectPage : classes.page}\r\n                                onClick={() => {\r\n                                    props.onPageChanged(p)\r\n                                }}>{p}</div>\r\n                })}\r\n            </div>\r\n            <div className={classes.grid}>\r\n                {props.users.map(u =>\r\n                    <div key={u.id} className={classes.profile}>\r\n                        <div>\r\n                            <NavLink to={'./../profile/' + u.id}>\r\n                                <img\r\n                                    alt={\"User image\"}\r\n                                    src={u.photos.small !== null\r\n                                        ? u.photos.small\r\n                                        : userPhoto\r\n                                    }\r\n                                    className={classes.userPhoto}\r\n                                />\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            Location\r\n                        </div>\r\n                        <span>\r\n                            {u.name}\r\n                        </span>\r\n\r\n\r\n                        <div className={classes.btn}>\r\n                            {u.followed\r\n                                ?\r\n                                <MyButton disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.unfollow(u.id)\r\n                                }} name={'Unfollow'}\r\n                                />\r\n                                :\r\n                                <MyButton disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }} name={'Follow'}\r\n                                />}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}","import {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    getUsersThunkCreator,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport React from 'react';\r\n\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <Preloader/>\r\n                : <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n\r\n            }\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        follow, unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress, getUsersThunkCreator\r\n    })(UsersContainer);\r\n"],"names":["props","slicedPages","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","curPage","currentPage","slice","_jsxs","className","classes","children","_jsx","map","p","onClick","onPageChanged","users","u","NavLink","to","id","alt","src","photos","small","userPhoto","name","followed","MyButton","disabled","followingInProgress","some","unfollow","follow","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getIsFetching","isFetching","getFollowingInProgress","getCurrentPage","UsersContainer","React","constructor","arguments","pageNumber","this","getUsersThunkCreator","componentDidMount","render","_Fragment","Preloader","Users","connect","setCurrentPage","toggleFollowingProgress"],"sourceRoot":""}